import requests
import random
import string
import re
import time
from urllib.parse import urlparse

class CachePoisoningScanner:
    def __init__(self):
        self.options = {
            "URL": "",
            "TIMEOUT": "10",
            "DELAY": "1",
            "COOKIE": "",
            "USER_AGENT": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
            "HEADERS": "",
            "RANDOM_HEADER": True,
            "TEST_VARIATIONS": 5,
            "MAX_RETRIES": 3
        }
        
        self.payloads = {
            "host": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_host": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_for": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_proto": [
                "http",
                "https"
            ],
            "x_forwarded_port": [
                "80",
                "443",
                "8080",
                "8443"
            ],
            "x_forwarded_path": [
                "/malicious",
                "/evil",
                "/admin",
                "/test"
            ],
            "x_forwarded_prefix": [
                "/malicious",
                "/evil",
                "/admin",
                "/test"
            ],
            "x_original_url": [
                "http://attacker.com/malicious",
                "https://evil.com/path",
                "http://malicious.example.com/admin"
            ],
            "x_rewrite_url": [
                "http://attacker.com/malicious",
                "https://evil.com/path",
                "http://malicious.example.com/admin"
            ],
            "x_original_host": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_host": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_http_host_override": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_http_host": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_remote_addr": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_real_ip": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_cluster_client_ip": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_server": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_ssl": [
                "on",
                "off"
            ],
            "x_forwarded_scheme": [
                "http",
                "https"
            ],
            "x_url_scheme": [
                "http",
                "https"
            ],
            "x_forwarded_ssl": [
                "on",
                "off"
            ],
            "x_forwarded_tls": [
                "on",
                "off"
            ],
            "x_forwarded_secure": [
                "on",
                "off"
            ],
            "x_forwarded_proto_version": [
                "HTTP/1.0",
                "HTTP/1.1",
                "HTTP/2"
            ],
            "x_forwarded_method": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
            ],
            "x_forwarded_content_type": [
                "application/json",
                "text/html",
                "application/xml",
                "text/xml"
            ],
            "x_forwarded_content_length": [
                "0",
                "100",
                "1000",
                "10000"
            ],
            "x_forwarded_transfer_encoding": [
                "chunked",
                "identity"
            ],
            "x_forwarded_encoding": [
                "gzip",
                "deflate",
                "compress"
            ],
            "x_forwarded_accept": [
                "*/*",
                "text/html",
                "application/json"
            ],
            "x_forwarded_accept_language": [
                "en-US",
                "en-GB",
                "fr-FR",
                "de-DE"
            ],
            "x_forwarded_accept_charset": [
                "utf-8",
                "iso-8859-1",
                "windows-1252"
            ],
            "x_forwarded_accept_encoding": [
                "gzip",
                "deflate",
                "compress"
            ],
            "x_forwarded_connection": [
                "keep-alive",
                "close"
            ],
            "x_forwarded_keep_alive": [
                "timeout=5",
                "timeout=10",
                "timeout=15"
            ],
            "x_forwarded_cache_control": [
                "no-cache",
                "no-store",
                "max-age=0",
                "max-age=60"
            ],
            "x_forwarded_pragma": [
                "no-cache"
            ],
            "x_forwarded_expires": [
                "0",
                "-1",
                "Wed, 21 Oct 2015 07:28:00 GMT"
            ],
            "x_forwarded_last_modified": [
                "Wed, 21 Oct 2015 07:28:00 GMT"
            ],
            "x_forwarded_etag": [
                "\"abc123\"",
                "\"xyz789\""
            ],
            "x_forwarded_if_modified_since": [
                "Wed, 21 Oct 2015 07:28:00 GMT"
            ],
            "x_forwarded_if_none_match": [
                "\"abc123\"",
                "\"xyz789\""
            ],
            "x_forwarded_if_match": [
                "\"abc123\"",
                "\"xyz789\""
            ],
            "x_forwarded_if_range": [
                "\"abc123\"",
                "Wed, 21 Oct 2015 07:28:00 GMT"
            ],
            "x_forwarded_range": [
                "bytes=0-499",
                "bytes=500-999",
                "bytes=1000-"
            ],
            "x_forwarded_content_range": [
                "bytes 0-499/1000",
                "bytes 500-999/1000"
            ],
            "x_forwarded_content_disposition": [
                "inline",
                "attachment",
                "attachment; filename=\"filename.ext\""
            ],
            "x_forwarded_content_location": [
                "/path/to/file",
                "http://example.com/path/to/file"
            ],
            "x_forwarded_content_md5": [
                "d41d8cd98f00b204e9800998ecf8427e"
            ],
            "x_forwarded_age": [
                "0",
                "100",
                "1000"
            ],
            "x_forwarded_via": [
                "1.1 example.com",
                "1.0 example.com",
                "2.0 example.com"
            ],
            "x_forwarded_warning": [
                "199 Miscellaneous warning",
                "214 Transformation applied"
            ],
            "x_forwarded_expect": [
                "100-continue"
            ],
            "x_forwarded_max_forwards": [
                "10",
                "20",
                "30"
            ],
            "x_forwarded_referer": [
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_referrer_policy": [
                "no-referrer",
                "no-referrer-when-downgrade",
                "origin",
                "origin-when-cross-origin",
                "same-origin",
                "strict-origin",
                "strict-origin-when-cross-origin",
                "unsafe-url"
            ],
            "x_forwarded_dnt": [
                "0",
                "1"
            ],
            "x_forwarded_save_data": [
                "on",
                "off"
            ],
            "x_forwarded_sec_fetch_dest": [
                "document",
                "empty",
                "frame",
                "iframe",
                "image",
                "script",
                "style"
            ],
            "x_forwarded_sec_fetch_mode": [
                "cors",
                "navigate",
                "no-cors",
                "same-origin"
            ],
            "x_forwarded_sec_fetch_site": [
                "cross-site",
                "same-origin",
                "same-site",
                "none"
            ],
            "x_forwarded_sec_fetch_user": [
                "?1"
            ],
            "x_forwarded_upgrade_insecure_requests": [
                "1"
            ],
            "x_forwarded_tea": [
                "time",
                "chunked"
            ],
            "x_forwarded_cookies": [
                "sessionid=abc123; csrftoken=xyz789"
            ],
            "x_forwarded_authorization": [
                "Bearer abc123",
                "Basic xyz789"
            ],
            "x_forwarded_proxy_authorization": [
                "Bearer abc123",
                "Basic xyz789"
            ],
            "x_forwarded_origin": [
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_access_control_request_method": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
            ],
            "x_forwarded_access_control_request_headers": [
                "content-type",
                "authorization"
            ],
            "x_forwarded_access_control_allow_origin": [
                "*",
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_access_control_allow_credentials": [
                "true",
                "false"
            ],
            "x_forwarded_access_control_allow_headers": [
                "content-type",
                "authorization"
            ],
            "x_forwarded_access_control_allow_methods": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
            ],
            "x_forwarded_access_control_max_age": [
                "3600",
                "7200",
                "86400"
            ],
            "x_forwarded_access_control_expose_headers": [
                "content-type",
                "authorization"
            ],
            "x_forwarded_strict_transport_security": [
                "max-age=31536000; includeSubDomains",
                "max-age=31536000; includeSubDomains; preload"
            ],
            "x_forwarded_content_security_policy": [
                "default-src 'self'",
                "default-src *",
                "script-src 'self' 'unsafe-inline'",
                "script-src * 'unsafe-inline'"
            ],
            "x_forwarded_x_content_type_options": [
                "nosniff"
            ],
            "x_forwarded_x_frame_options": [
                "DENY",
                "SAMEORIGIN"
            ],
            "x_forwarded_x_xss_protection": [
                "1; mode=block",
                "0"
            ],
            "x_forwarded_referrer": [
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_refresh": [
                "5; url=http://attacker.com",
                "10; url=https://evil.com"
            ],
            "x_forwarded_location": [
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_content_language": [
                "en-US",
                "en-GB",
                "fr-FR",
                "de-DE"
            ],
            "x_forwarded_set_cookie": [
                "sessionid=abc123; Path=/; HttpOnly",
                "csrftoken=xyz789; Path=/; Secure"
            ],
            "x_forwarded_www_authenticate": [
                "Basic realm=\"Example\"",
                "Bearer realm=\"Example\""
            ],
            "x_forwarded_proxy_authenticate": [
                "Basic realm=\"Example\"",
                "Bearer realm=\"Example\""
            ],
            "x_forwarded_allow": [
                "GET, HEAD, POST",
                "GET, HEAD, POST, PUT, DELETE"
            ],
            "x_forwarded_server": [
                "Apache/2.4.1 (Unix)",
                "nginx/1.14.0"
            ],
            "x_forwarded_timing_allow_origin": [
                "*",
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_x_powered_by": [
                "PHP/7.2.0",
                "ASP.NET"
            ],
            "x_forwarded_x_ua_compatible": [
                "IE=edge",
                "chrome=1"
            ],
            "x_forwarded_x_requested_with": [
                "XMLHttpRequest"
            ],
            "x_forwarded_x_forwarded_for": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_forwarded_host": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_forwarded_proto": [
                "http",
                "https"
            ],
            "x_forwarded_x_forwarded_port": [
                "80",
                "443",
                "8080",
                "8443"
            ],
            "x_forwarded_x_forwarded_path": [
                "/malicious",
                "/evil",
                "/admin",
                "/test"
            ],
            "x_forwarded_x_forwarded_prefix": [
                "/malicious",
                "/evil",
                "/admin",
                "/test"
            ],
            "x_forwarded_x_original_url": [
                "http://attacker.com/malicious",
                "https://evil.com/path",
                "http://malicious.example.com/admin"
            ],
            "x_forwarded_x_rewrite_url": [
                "http://attacker.com/malicious",
                "https://evil.com/path",
                "http://malicious.example.com/admin"
            ],
            "x_forwarded_x_original_host": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_host": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_http_host_override": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_http_host": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_remote_addr": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_real_ip": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_cluster_client_ip": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_forwarded_server": [
                "attacker.com",
                "malicious.example.com",
                "evil.com",
                "localhost",
                "127.0.0.1"
            ],
            "x_forwarded_x_forwarded_ssl": [
                "on",
                "off"
            ],
            "x_forwarded_x_forwarded_scheme": [
                "http",
                "https"
            ],
            "x_forwarded_x_url_scheme": [
                "http",
                "https"
            ],
            "x_forwarded_x_forwarded_tls": [
                "on",
                "off"
            ],
            "x_forwarded_x_forwarded_secure": [
                "on",
                "off"
            ],
            "x_forwarded_x_forwarded_proto_version": [
                "HTTP/1.0",
                "HTTP/1.1",
                "HTTP/2"
            ],
            "x_forwarded_x_forwarded_method": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
            ],
            "x_forwarded_x_forwarded_content_type": [
                "application/json",
                "text/html",
                "application/xml",
                "text/xml"
            ],
            "x_forwarded_x_forwarded_content_length": [
                "0",
                "100",
                "1000",
                "10000"
            ],
            "x_forwarded_x_forwarded_transfer_encoding": [
                "chunked",
                "identity"
            ],
            "x_forwarded_x_forwarded_encoding": [
                "gzip",
                "deflate",
                "compress"
            ],
            "x_forwarded_x_forwarded_accept": [
                "*/*",
                "text/html",
                "application/json"
            ],
            "x_forwarded_x_forwarded_accept_language": [
                "en-US",
                "en-GB",
                "fr-FR",
                "de-DE"
            ],
            "x_forwarded_x_forwarded_accept_charset": [
                "utf-8",
                "iso-8859-1",
                "windows-1252"
            ],
            "x_forwarded_x_forwarded_accept_encoding": [
                "gzip",
                "deflate",
                "compress"
            ],
            "x_forwarded_x_forwarded_connection": [
                "keep-alive",
                "close"
            ],
            "x_forwarded_x_forwarded_keep_alive": [
                "timeout=5",
                "timeout=10",
                "timeout=15"
            ],
            "x_forwarded_x_forwarded_cache_control": [
                "no-cache",
                "no-store",
                "max-age=0",
                "max-age=60"
            ],
            "x_forwarded_x_forwarded_pragma": [
                "no-cache"
            ],
            "x_forwarded_x_forwarded_expires": [
                "0",
                "-1",
                "Wed, 21 Oct 2015 07:28:00 GMT"
            ],
            "x_forwarded_x_forwarded_last_modified": [
                "Wed, 21 Oct 2015 07:28:00 GMT"
            ],
            "x_forwarded_x_forwarded_etag": [
                "\"abc123\"",
                "\"xyz789\""
            ],
            "x_forwarded_x_forwarded_if_modified_since": [
                "Wed, 21 Oct 2015 07:28:00 GMT"
            ],
            "x_forwarded_x_forwarded_if_none_match": [
                "\"abc123\"",
                "\"xyz789\""
            ],
            "x_forwarded_x_forwarded_if_match": [
                "\"abc123\"",
                "\"xyz789\""
            ],
            "x_forwarded_x_forwarded_if_range": [
                "\"abc123\"",
                "Wed, 21 Oct 2015 07:28:00 GMT"
            ],
            "x_forwarded_x_forwarded_range": [
                "bytes=0-499",
                "bytes=500-999",
                "bytes=1000-"
            ],
            "x_forwarded_x_forwarded_content_range": [
                "bytes 0-499/1000",
                "bytes 500-999/1000"
            ],
            "x_forwarded_x_forwarded_content_disposition": [
                "inline",
                "attachment",
                "attachment; filename=\"filename.ext\""
            ],
            "x_forwarded_x_forwarded_content_location": [
                "/path/to/file",
                "http://example.com/path/to/file"
            ],
            "x_forwarded_x_forwarded_content_md5": [
                "d41d8cd98f00b204e9800998ecf8427e"
            ],
            "x_forwarded_x_forwarded_age": [
                "0",
                "100",
                "1000"
            ],
            "x_forwarded_x_forwarded_via": [
                "1.1 example.com",
                "1.0 example.com",
                "2.0 example.com"
            ],
            "x_forwarded_x_forwarded_warning": [
                "199 Miscellaneous warning",
                "214 Transformation applied"
            ],
            "x_forwarded_x_forwarded_expect": [
                "100-continue"
            ],
            "x_forwarded_x_forwarded_max_forwards": [
                "10",
                "20",
                "30"
            ],
            "x_forwarded_x_forwarded_referer": [
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_x_forwarded_referrer_policy": [
                "no-referrer",
                "no-referrer-when-downgrade",
                "origin",
                "origin-when-cross-origin",
                "same-origin",
                "strict-origin",
                "strict-origin-when-cross-origin",
                "unsafe-url"
            ],
            "x_forwarded_x_forwarded_dnt": [
                "0",
                "1"
            ],
            "x_forwarded_x_forwarded_save_data": [
                "on",
                "off"
            ],
            "x_forwarded_x_forwarded_sec_fetch_dest": [
                "document",
                "empty",
                "frame",
                "iframe",
                "image",
                "script",
                "style"
            ],
            "x_forwarded_x_forwarded_sec_fetch_mode": [
                "cors",
                "navigate",
                "no-cors",
                "same-origin"
            ],
            "x_forwarded_x_forwarded_sec_fetch_site": [
                "cross-site",
                "same-origin",
                "same-site",
                "none"
            ],
            "x_forwarded_x_forwarded_sec_fetch_user": [
                "?1"
            ],
            "x_forwarded_x_forwarded_upgrade_insecure_requests": [
                "1"
            ],
            "x_forwarded_x_forwarded_tea": [
                "time",
                "chunked"
            ],
            "x_forwarded_x_forwarded_cookies": [
                "sessionid=abc123; csrftoken=xyz789"
            ],
            "x_forwarded_x_forwarded_authorization": [
                "Bearer abc123",
                "Basic xyz789"
            ],
            "x_forwarded_x_forwarded_proxy_authorization": [
                "Bearer abc123",
                "Basic xyz789"
            ],
            "x_forwarded_x_forwarded_origin": [
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_x_forwarded_access_control_request_method": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
            ],
            "x_forwarded_x_forwarded_access_control_request_headers": [
                "content-type",
                "authorization"
            ],
            "x_forwarded_x_forwarded_access_control_allow_origin": [
                "*",
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_x_forwarded_access_control_allow_credentials": [
                "true",
                "false"
            ],
            "x_forwarded_x_forwarded_access_control_allow_headers": [
                "content-type",
                "authorization"
            ],
            "x_forwarded_x_forwarded_access_control_allow_methods": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
            ],
            "x_forwarded_x_forwarded_access_control_max_age": [
                "3600",
                "7200",
                "86400"
            ],
            "x_forwarded_x_forwarded_access_control_expose_headers": [
                "content-type",
                "authorization"
            ],
            "x_forwarded_x_forwarded_strict_transport_security": [
                "max-age=31536000; includeSubDomains",
                "max-age=31536000; includeSubDomains; preload"
            ],
            "x_forwarded_x_forwarded_content_security_policy": [
                "default-src 'self'",
                "default-src *",
                "script-src 'self' 'unsafe-inline'",
                "script-src * 'unsafe-inline'"
            ],
            "x_forwarded_x_forwarded_x_content_type_options": [
                "nosniff"
            ],
            "x_forwarded_x_forwarded_x_frame_options": [
                "DENY",
                "SAMEORIGIN"
            ],
            "x_forwarded_x_forwarded_x_xss_protection": [
                "1; mode=block",
                "0"
            ],
            "x_forwarded_x_forwarded_referrer": [
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_x_forwarded_refresh": [
                "5; url=http://attacker.com",
                "10; url=https://evil.com"
            ],
            "x_forwarded_x_forwarded_location": [
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_x_forwarded_content_language": [
                "en-US",
                "en-GB",
                "fr-FR",
                "de-DE"
            ],
            "x_forwarded_x_forwarded_set_cookie": [
                "sessionid=abc123; Path=/; HttpOnly",
                "csrftoken=xyz789; Path=/; Secure"
            ],
            "x_forwarded_x_forwarded_www_authenticate": [
                "Basic realm=\"Example\"",
                "Bearer realm=\"Example\""
            ],
            "x_forwarded_x_forwarded_proxy_authenticate": [
                "Basic realm=\"Example\"",
                "Bearer realm=\"Example\""
            ],
            "x_forwarded_x_forwarded_allow": [
                "GET, HEAD, POST",
                "GET, HEAD, POST, PUT, DELETE"
            ],
            "x_forwarded_x_forwarded_server": [
                "Apache/2.4.1 (Unix)",
                "nginx/1.14.0"
            ],
            "x_forwarded_x_forwarded_timing_allow_origin": [
                "*",
                "http://attacker.com",
                "https://evil.com"
            ],
            "x_forwarded_x_forwarded_x_powered_by": [
                "PHP/7.2.0",
                "ASP.NET"
            ],
            "x_forwarded_x_forwarded_x_ua_compatible": [
                "IE=edge",
                "chrome=1"
            ],
            "x_forwarded_x_forwarded_x_requested_with": [
                "XMLHttpRequest"
            ]
        }
        
        self.cache_indicators = [
            "age",
            "cache-control",
            "expires",
            "last-modified",
            "etag",
            "x-cache",
            "x-cache-lookup",
            "x-cache-status",
            "x-cache-hits",
            "x-cache-remote",
            "x-cache-miss",
            "x-cache-hit",
            "x-cache-redis",
            "x-cache-nginx",
            "x-cache-varnish",
            "x-cache-cloudflare",
            "x-cache-fastly",
            "x-cache-akamai",
            "x-cache-cdn",
            "x-cache-server",
            "x-cache-backend",
            "x-cache-proxy",
            "x-cache-gateway",
            "x-cache-load-balancer",
            "x-cache-forward",
            "x-cache-reverse",
            "x-cache-content",
            "x-cache-dynamic",
            "x-cache-static",
            "x-cache-file",
            "x-cache-memory",
            "x-cache-disk",
            "x-cache-database",
            "x-cache-redis",
            "x-cache-memcached",
            "x-cache-mongodb",
            "x-cache-mysql",
            "x-cache-postgresql",
            "x-cache-sqlite",
            "x-cache-oracle",
            "x-cache-mssql",
            "x-cache-db2",
            "x-cache-cassandra",
            "x-cache-couchdb",
            "x-cache-mariadb",
            "x-cache-percona",
            "x-cache-tidb",
            "x-cache-vitess",
            "x-cache-cockroachdb",
            "x-cache-yugabytedb",
            "x-cache-scylladb",
            "x-cache-riak",
            "x-cache-influxdb",
            "x-cache-prometheus",
            "x-cache-grafana",
            "x-cache-elasticsearch",
            "x-cache-solr",
            "x-cache-lucene",
            "x-cache-sphinx",
            "x-cache-whoosh",
            "x-cache-xapian",
            "x-cache-zendsearch",
            "x-cache-haystack",
            "x-cache-pysolr",
            "x-cache-django-haystack",
            "x-cache-elastic",
            "x-cache-algolia",
            "x-cache-typesense",
            "x-cache-meilisearch",
            "x-cache-opensearch",
            "x-cache-vespa",
            "x-cache-splunk",
            "x-cache-sumologic",
            "x-cache-logstash",
            "x-cache-fluentd",
            "x-cache-beats",
            "x-cache-graylog",
            "x-cache-sentry",
            "x-cache-bugsnag",
            "x-cache-rollbar",
            "x-cache-airbrake",
            "x-cache-honeybadger",
            "x-cache-raygun",
            "x-cache-newrelic",
            "x-cache-datadog",
            "x-cache-dynatrace",
            "x-cache-appdynamics",
            "x-cache-instana",
            "x-cache-skywalking",
            "x-cache-pinpoint",
            "x-cache-jaeger",
            "x-cache-zipkin",
            "x-cache-w3c-tracecontext",
            "x-cache-b3",
            "x-cache-aws-xray",
            "x-cache-google-cloud-trace",
            "x-cache-azure-application-insights",
            "x-cache-elastic-apm",
            "x-cache-kibana",
            "x-cache-grafana",
            "x-cache-prometheus",
            "x-cache-influxdb",
            "x-cache-graphite",
            "x-cache-opentsdb",
            "x-cache-kairosdb",
            "x-cache-druid",
            "x-cache-presto",
            "x-cache-trino",
            "x-cache-athena",
            "x-cache-redshift",
            "x-cache-bigquery",
            "x-cache-snowflake",
            "x-cache-databricks",
            "x-cache-looker",
            "x-cache-tableau",
            "x-cache-powerbi",
            "x-cache-quicksight",
            "x-cache-metabase",
            "x-cache-superset",
            "x-cache-redash",
            "x-cache-mode",
            "x-cache-lookml",
            "x-cache-dbt",
            "x-cache-matillion",
            "x-cache-alcemy",
            "x-cache-stitch",
            "x-cache-fivetran",
            "x-cache-hevo",
            "x-cache-airbyte",
            "x-cache-matillion",
            "x-cache-alcemy",
            "x-cache-stitch",
            "x-cache-fivetran",
            "x-cache-hevo",
            "x-cache-airbyte"
        ]
    
    def set_option(self, key, value):
        self.options[key] = value
    
    def get_option(self, key):
        return self.options[key]
    
    def generate_random_string(self, length=10):
        return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))
    
    def check_cache_indicators(self, response):
        for indicator in self.cache_indicators:
            if indicator in response.headers:
                return True
        return False
    
    def test_cache_poisoning(self, url, header_name, header_value, headers, cookies):
        try:
            test_headers = headers.copy()
            test_headers[header_name] = header_value
            
            marker = self.generate_random_string(10)
            test_headers["X-Marker"] = marker
            
            response = requests.get(url, headers=test_headers, cookies=cookies, timeout=int(self.get_option("TIMEOUT")), verify=False)
            
            if marker in response.text:
                return True, "Marker reflected in response"
            
            if self.check_cache_indicators(response):
                return True, "Cache indicators detected"
            
            return False, None
        except Exception:
            return False, None
    
    def run(self):
        url = self.get_option("URL")
        timeout = int(self.get_option("TIMEOUT"))
        delay = int(self.get_option("DELAY"))
        test_variations = int(self.get_option("TEST_VARIATIONS"))
        max_retries = int(self.get_option("MAX_RETRIES"))
        
        headers = {
            "User-Agent": self.get_option("USER_AGENT"),
            "Cookie": self.get_option("COOKIE")
        }
        
        if self.get_option("HEADERS"):
            try:
                for header in self.get_option("HEADERS").split("\\n"):
                    if ":" in header:
                        key, value = header.split(":", 1)
                        headers[key.strip()] = value.strip()
            except:
                pass
        
        cookies = {}
        
        vulnerabilities = []
        
        for header_name, header_values in self.payloads.items():
            for header_value in header_values[:test_variations]:
                if delay > 0:
                    time.sleep(delay)
                
                for retry in range(max_retries):
                    vulnerable, reason = self.test_cache_poisoning(url, header_name, header_value, headers, cookies)
                    
                    if vulnerable:
                        vulnerabilities.append({
                            "header": header_name,
                            "value": header_value,
                            "reason": reason
                        })
                        break
        
        if vulnerabilities:
            return {
                "success": True,
                "message": f"Found {len(vulnerabilities)} potential cache poisoning vulnerabilities",
                "vulnerabilities": vulnerabilities
            }
        else:
            return {
                "success": True,
                "message": "No cache poisoning vulnerabilities detected"
            }
